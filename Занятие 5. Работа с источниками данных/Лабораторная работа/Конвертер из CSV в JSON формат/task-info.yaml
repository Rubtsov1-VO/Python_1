type: output
files:
  - name: __init__.py
    visible: false
    learner_created: false
  - name: input.csv
    visible: true
    learner_created: false
  - name: main.py
    visible: true
    placeholders:
      - offset: 0
        length: 39
        placeholder_text: "# TODO импортировать необходимые модули"
        initial_state:
          length: 39
          offset: 0
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          import csv
          import json
        selected: false
        status: Failed
      - offset: 151
        length: 199
        placeholder_text: "...  # TODO считать содержимое csv файла"
        initial_state:
          length: 40
          offset: 129
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          with open(INPUT_FILENAME, encoding="utf-8") as f:
                  lines = [line for line in csv.DictReader(f)]
        selected: true
        status: Failed
      - offset: 950
        length: 54
        placeholder_text: "...  # TODO Сериализовать в файл с отступами равными 4"
        initial_state:
          length: 54
          offset: 175
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          with open(OUTPUT_FILENAME, "w", encoding="utf-8") as f:
                  json.dump(lines, f, indent=4)
        selected: false
        status: Failed
    learner_created: false
  - name: tests/output.txt
    visible: false
    learner_created: false
  - name: output.json
    visible: true
    learner_created: true
status: Failed
feedback:
  message: Incorrect
  time: "Mon, 11 Nov 2024 17:56:16 UTC"
  expected: |-
    [
        {
            "longitude": "-122.050000",
            "latitude": "37.370000",
            "housing_median_age": "27.000000",
            "total_rooms": "3885.000000",
            "total_bedrooms": "661.000000",
            "population": "1537.000000",
            "households": "606.000000",
            "median_income": "6.608500",
            "median_house_value": "344700.000000"
        },
        {
            "longitude": "-118.300000",
            "latitude": "34.260000",
            "housing_median_age": "43.000000",
            "total_rooms": "1510.000000",
            "total_bedrooms": "310.000000",
            "population": "809.000000",
            "households": "277.000000",
            "median_income": "3.599000",
            "median_house_value": "176500.000000"
        },
        {
            "longitude": "-117.810000",
            "latitude": "33.780000",
            "housing_median_age": "27.000000",
            "total_rooms": "3589.000000",
            "total_bedrooms": "507.000000",
            "population": "1484.000000",
            "households": "495.000000",
            "median_income": "5.793400",
            "median_house_value": "270500.000000"
        },
        {
            "longitude": "-118.360000",
            "latitude": "33.820000",
            "housing_median_age": "28.000000",
            "total_rooms": "67.000000",
            "total_bedrooms": "15.000000",
            "population": "49.000000",
            "households": "11.000000",
            "median_income": "6.135900",
            "median_house_value": "330000.000000"
        }
    ]
  actual: |-
    {
        "longitude": {
            "longitude": "longitude",
            "latitude": "latitude",
            "housing_median_age": "housing_median_age",
            "total_rooms": "total_rooms",
            "total_bedrooms": "total_bedrooms",
            "population": "population",
            "households": "households",
            "median_income": "median_income",
            "median_house_value": "median_house_value"
        },
        "-122.050000": {
            "longitude": "-122.050000",
            "latitude": "37.370000",
            "housing_median_age": "27.000000",
            "total_rooms": "3885.000000",
            "total_bedrooms": "661.000000",
            "population": "1537.000000",
            "households": "606.000000",
            "median_income": "6.608500",
            "median_house_value": "344700.000000"
        },
        "-118.300000": {
            "longitude": "-118.300000",
            "latitude": "34.260000",
            "housing_median_age": "43.000000",
            "total_rooms": "1510.000000",
            "total_bedrooms": "310.000000",
            "population": "809.000000",
            "households": "277.000000",
            "median_income": "3.599000",
            "median_house_value": "176500.000000"
        },
        "-117.810000": {
            "longitude": "-117.810000",
            "latitude": "33.780000",
            "housing_median_age": "27.000000",
            "total_rooms": "3589.000000",
            "total_bedrooms": "507.000000",
            "population": "1484.000000",
            "households": "495.000000",
            "median_income": "5.793400",
            "median_house_value": "270500.000000"
        },
        "-118.360000": {
            "longitude": "-118.360000",
            "latitude": "33.820000",
            "housing_median_age": "28.000000",
            "total_rooms": "67.000000",
            "total_bedrooms": "15.000000",
            "population": "49.000000",
            "households": "11.000000",
            "median_income": "6.135900",
            "median_house_value": "330000.000000"
        }
    }
record: -1
solution_hidden: true
